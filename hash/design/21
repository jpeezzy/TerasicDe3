`timescale 1ns / 1ps
`include "Constants.vh"
module SHA256 #(
	parameter IN_W = 512,
	parameter OUT_W=256
)
(
	input logic[IN_W - 1:0] in,
	output logic[OUT_W - 1:0] out

);

int count;
logic clock;
reg [255:0] _first_input;
reg [255:0] _input;
reg [255:0] _out;
logic [31:0] _W; 
logic [31:0] _k;

Hash_Round hr(
	count,
	_k,
	_W,
	_input,
	_out
);
/*always_comb begin
end*/

always_comb begin
	count = 0;
	_first_input[255:0] = {`h0, `h1, `h2, `h3, `h4, `h5, `h6 ,`h7};
	_W = in[IN_W-1:IN_W-1-32];
	$display("starting the first round of SHA");
	for(count = 0; count < 63; count++) begin
		//setting up the constant for the hash
		_input = (count > 0)? _out: _first_input;
		_k <= k[count];
		//setting up the partial input _W
		_W <= (count < 16) ? in[(IN_W-1)-32*count -: 32] : 0; //do some algorithm here
	end
end

endmodule
